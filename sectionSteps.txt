Flutter Themes:
way to define custom look & feel and custom color palette
https://flutter.dev/docs/cookbook/design/themes

Create app theme to share styling and color across app
-> needs ThemeData Widget

1. Create an overall material theme
2. Delete and use DarkTheme override .copyWith to use DarkTheme but change a few apsects
3. Sample FlatButton local override Theme by wrapping FlatButton in Theme Widget
4. Comment out FlatButton as no longer needed

5. separate screens into different files:
5.1 create file "input_page.dart"
5.2 cut & paste Input Page Stateful Widget from main.dart -> input_page.dart
5.3 add input_page.dart as import to main.dart

6. Create Cards
6.1 delete content of scaffold on input_page
6.2 add body Container, Color (0xFF1D1E33), height 200, width 170, margin (all) 15, borderradius via decoration property - > need to move Color to decoration so it doesn't crash!
6.3. delete height and width and replace with expanded widgets
6.4 as there are many repeats - Refactor code -> extract containers with "extract widget" from FLutter Outline - delete new (deprecated)
6.5 delete constr of new class   const ReusableCard({ Key key, }) : super(key: key);
6.6 create own constructor
6.7 create property colour and make it a @required prop
6.8. add required props in all calls
6.9. add pin container as "Button" at the bottom within Column children[]
6.10 add constants at the top for easier access - bottomContainerHeight and replace height
6.11 add const activeCardColor at the top for init and replace params at obj instantiation
6.12 add const bottomContainerColour at the top for init and replace params at obj instantiation

7. L116 - Create custom Flutter Widget
7.1 create custom child property called cardChild in ReusableCard class and add to constr
7.2 add child: CardChild to Container of class to make it passable to class

8. add text to cards:
8.1 get font_awesome_flutter package from pub.dev
8.2 add cardChild to first container with Icon mars (male) and Text "Male"
STOP APP and run from SCRATCH (= cold restart)! whenever you do package get in pubspec.yaml
8.3 add MainAxisAlignment.center to Column to center info on cardChild
8.4 extract Column with all props into separate class IconContent, add props IconData (cardIcon) & Text and constr, change Text & Icon in IconContent class to reflect these changes
(replace FontAwesome.mars with cardIcon (all of it incl. FontAwesome!)
8.5 separate IconContent & Reusable Card into sep files (icon_content.dart &  reusable_card.dart
8.6 create const for height & size in icon_content.dart
8.6a labelTextstyle

9. L-117 GestureDector Widget - make iconCards interactive
9.1 - 2 options: wrap ReusableCard in FlatButton (changes styling -use if material button is needed) or GestureDetector (used here to keep styling) - wrap in Gesture Detector, add onTap
9.2 change color of male & female card on tap
    9.2a create const for inactive Color,
    9.2b init Male & Female Card with new params (maleCardColour and femaleCardColour) within state class
    9.2c change colour prop of male and female card to maleCardColour and femaleCardColour
    9.2d create method updateColour()
    9.2e update onTap with setState(updateColour(gender))
    9.2f switch off other male/female active colour

10. L-118 Enums: replace int Gender with enum Gender
10.1 add enum Gender at top (enums cannot be in classes, no ; at the end!!
10.2 a,b&c update if statement in updateColour()
10.3 a&b update setState() | updateColour() methodcalls for male & female


11. L-119 Ternary Operators: replace long if statement with ternary operator
11.1 instantiate selectedGender enum (init value null)
11.2 (a&b) change cards for male and  female in respective setStates()
11.3 (a&b) change colour: prop to active/inactive based on male/female selection with ternary

12. L- 120 Dart Funcs as first order obj (pass funcs as if they were objects)
    Task: upgrade ReusableCard to include GestureDetector
12.1 delete GestureDetectors in input_page & wrap container of ReusableCard Class in GestureContainer
12.2. add tap handling func to ReusableCard Class
12.2a add func stump
12.2b add func to constr
12.2c  relate onTap with onPress
12.3 add onPress to input_page ReusableCard and define anonymoous func to setState

13- L-121 Add Slider to middle ReusableCard
13.1 add cardChild to ReusableCard Column
13.2 as we want the same text style for all cards -refactor TextStyle const from input_page to dedicated const file
13.2a create constants.dart
13.2b cut&paste labelTextStyle from icon_content.dart to constants.dart
13.2c cut&paste color & bottomContainerHeight from input_page to constants.dart
13.2d import constant.dart in input_page.dart and icon_content.dart to be able to refer
13.3 refactor all consts to start with k as per naming convention
13.4 add TextStyle kLabelTextStyle to input_page ReusableClass 'HEIGHT' Text Widget
13.5 add CrossAxisAlignment.stretch at TOP COLUMN to restretch Card
13.6. add ROW in Middle Reusable card after HEIGHT Text for height & cm + Text for 180
13.7 create const for 13.6. number style and link
13.8 create Text Widget for cm
13.9 add mainAxisAlignment.center to top column to center vertically
13.10 add mainAxisAlignment to local ROW to center horizontally
13.11 (a&b) get cm to baselline by adding crossAxisAlignment.baseline in ROW - needs additional textBaseline to function!!
13.12 add material design slider
13.12a add int height as prop to class InputPage with default value of 180
13.12b change '180' to receive int height as String!
13.12c add to Slider() -> height as double, min, max, activeColor, inactiveColor, onChanged (newValue) gets passed from slider

14. L-122 Customizing Widgets with themes
Task: change slider design to match custom needs - SliderTheme
14.1 SliderTheme on top of Slider
14.2 to only tweak a few props, don't use SliderThemeData or you have to set ALL properties, instead use SliderTheme.of(context).copyWith()
14.3 thumbColor doesn't react to color change, as activeColor in Slider overrides it -> delete activeColor in slider and add activeTrackColor in SliderTheme
14.4 optional - move SliderTheme to main.dart to make all sliders look like this
14.5 move inactiveColor into SliderTheme as inactiveTrackColor for consistency

15. L-123 Building a Flutter Widget from Scratch (Composition vs Inheritance):
Task: build final Row with two cards by building own Widgets
15.1 add cardChild to first ReusableCards in 3rd Row with alignment, Text (Weight) with labelTextStle
15.2 (a&b) add variable at top to store weight; add weight var to new Text widget in ReusableCard .toString and use numberTextStyle
15.3 add minus & plus buttons - add Row and within Row(centered along main axis)
15.3a add FloatingActionButton (FAB) with plus icon
15.3b add FAB with minus icon
-- now create own RawMaterial Button inside Row()
15.4 create stateless widget at bottom RoundIconButton (RIB) from RawMaterialButton with circular shape and own bgColor
15.5 (a&b) replace FAB with RIB for both buttons
15.6 add Size constraint as per RawMaterialButton implementation (just copy from there)
15.7 add elevation-> without onPressed - Button is in disabled state!! add empty onPressed()
15.8 add empty child prop for different icons -
15.8 (a) create a Icon var,
15.8 (b) init constr,
15.8 (c) use in child:Icon
15.8 (d) create RIB with FontAwesome plus icon
15.9 copy&paste for minus button FontAwesome minus
15.10 add functionality for onPressed:
15.10 (a)  add Final Function onTapped to class
15.10 (b) add  this.onTapped to constr
15.10 (c) add onPressed: onTapped in class props
15.10 (d) add onTapped logic to RIB with weight+=1
15.11 same for minus
15.12 add @required for icon and onTapped in constr
15.13 add Age card func to last card
15.13 (a) - add age var
15.13 (b) copy and paste column of WEIGHT card and change all weight to age

16. L-124 Routes and Navigation - Multi-screen Apps
16.1 create results_page.dart, import material package, create stateless Widget ResultsPage
16.2 add child Text('CALCULATE') to bottom Container on input_page.dart
16.3 wrap container with GestureDetector
16.4 create route for onTap:
16.4 (a) - import results_page.dart in input_page.dart
16.4 (b) - add Navigation.push() to GestureDetector

17. L-125: tidy-up input_page and add Widgets to results_page
17.1 format calculate button: (a) const kLargeButton in constants.dart, (b) apply styleConstant in input_page
17.2 center text by wrapping in a center widget
17.3 as text is too close to bottom for some phones (e.g. iPhone) - bring up with padding at bottom
--- add Title part to result page
17.4 remove text and add components for page (Column, Expanded, Container, Text, etc.)
17.5 add textstyle for Title
17.5 (a) - add const to constants with appropriate style kTitleTextStyle
17.5 (b) - import constants.dart in results_page.dart
17.5 (c) - add style to Text()
--- add Main part to results_page
17.6 add Widgets (Expanded (flex 5 to take more space), ReusableCard (import first!), Column, 3x Text)
17.7 (a) - add const to constants.dart with appropriate style kResultTextStyle, (b) add const to style
17.8 add crossAxisAlignment to stretch Column across screen
17.9 (a) add second text widget for bmi reading, (b) with const Style kBMITextStyle, (c) add style to Text()
17.10 (a) add Interpretation Text Widget, (b) add kBodyTextStyle to const.dart, (c) add style to Text()
17.10 (d) add TextAlign.center
--- 17.11 - add bottom button
17.11 (a) extract GestureDetector Widget in input_page.dart with Children to BottomButton, delete Constr
17.11 (b) add properties Function onTap, String buttonTitle
17.11 (c) cut-out onTap Navigator.push() and replace with onTap prop, and replace 'CALCULATE with ButtonTitle prop'
17.11 (d) add props as args to BottomButton call (and delete new keyword)
17.11 (e) remove BottomButton from input_page into new bottom_button.dart (2 imports in this, 1 in input_page)
17.11 (f) remove RoundIconButton from input_page into new round_icon_button.dart
17.11 (g) import bottom_button.dart into results_page
17.11 (h) add BottomButton in results_page screen and add Navigation.pop() to onTap
--- 17.12 tweek title of results_page
17.12 (a) add padding 15
17.12 (b) add alignment